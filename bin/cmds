#!/usr/bin/env ruby

require "cli.rb"

$cmds_base_dir = "/Users/#{%x[whoami].strip}/dotfiles/cmds/"
$cmds_file = "/Users/#{%x[whoami].strip}/dotfiles/cmds/#{%x[pwd].strip}/cmds.rb"

class OptionParser
  def info
    @info
  end
  def info=(str)
    @info = str
    top.append(">>> "+str, nil, nil)
    top.append("", nil, nil)
  end
end

module CMD end
class CMDS extend CMD
  def self.list(opts)
    opts.info = "List available commands at the current working directory."
    lambda {
      commands = CMDS.methods - $old_methods
      if not commands.empty?
        p commands.map(&:to_s)
      else
        exit 1
      end
    }
  end
  def self.edit(opts)
    opts.info = "Edit cmds.rb file, with template default."
    lambda {
      if not File.file? $cmds_file
        system("mkdir -p $(dirname #{$cmds_file})")
        system("cp #{$cmds_base_dir}/template.rb #{$cmds_file}")
      end
      system("$EDITOR #{$cmds_file}")
    }
  end
  def self.trash(opts)
    opts.info = "Move cmds.rb file to trash."
    lambda {
      if File.exists? $cmds_file
        system("zsh -ic 'trash #{$cmds_file}'")
      end
    }
  end
end

$old_methods = CMDS.methods
require $cmds_file if File.file? $cmds_file

CLI.parse! CMDS
