function _same_inode {
    [ "$(stat -f '%i' $1)" != "$(stat -f '%i' $2)" ]
}

function _ENSURE_RCS {
    for rc in $(ls $HOME/dotfiles/rcs); do
        local rc_dest="$(head -n 1 $HOME/dotfiles/rcs/$rc | sed -E 's/^[#";]\[(.*)\]$/\1/' )"
        if [[ ! -f "$HOME/$rc_dest" ]] || $(_same_inode "$HOME/$rc_dest" "$HOME/dotfiles/rcs/$rc") ; then
            mkdir -p "$(basename $rc_dest)"
            ln -f "$HOME/dotfiles/rcs/$rc" "${HOME}/$rc_dest"
        fi
    done
}

function ZSHRC {
    (_ENSURE_RCS &)

    source ~/dotfiles/zsh/init.zsh

    if [[ $1 == eval ]]; then
        shift
        ICMD="$@"
        set --
        function zle-line-init {
            BUFFER="$ICMD"
            zle accept-line
            zle -D zle-line-init
        }
        zle -N zle-line-init
    fi

    [ -e ~/dotfiles/extra.zsh ] && source ~/dotfiles/extra.zsh

    chpwd # Best to check, new shell (new term window or `zsh`) does not trigger chpwd
}

local ZSH_PROF_LOG="/tmp/zsh-profiling.$$.log"
local ZPROF_LOG="/tmp/zprof.$$.log"
function PROF_GO {
    trap "
    # set the trace prompt to include seconds, nanoseconds, script name and line number
    zmodload zsh/datetime
    setopt promptsubst prompt_subst
    PS4='%D{%M%S%.} %N:%i> '
    # save file stderr to file descriptor 3 and redirect stderr (including trace output)
    exec 3>&2 2>$ZSH_PROF_LOG
    setopt xtrace
    " EXIT
    zmodload zsh/zprof
}

function PROF_NO {
    trap '
    unsetopt xtrace
    # restore stderr to the value saved in FD 3
    exec 2>&3 3>&-
    ' EXIT
    zprof > $ZPROF_LOG
}

function dbg {
    ~/dotfiles/misc/parse-zsh-profiling.py ${ZSH_PROF_LOG/$$/$1} | less
    less ${ZPROF_LOG/$$/$1}
}

[[ 1 == $PROF ]] &&
    PROF_GO
ZSHRC; local X=$?
[[ 1 == $PROF ]] &&
    PROF_NO &&
    export PROF=0 &&
    echo $$
[ $X ] || exit $X
